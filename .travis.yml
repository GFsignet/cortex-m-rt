language: rust

matrix:
  allow_failures:
    - rust: nightly
  include:
    # MSRV 1.32.0 #############################################################
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: 1.32.0

    - env: TARGET=thumbv6m-none-eabi
      rust: 1.32.0

    - env: TARGET=thumbv7m-none-eabi
      rust: 1.32.0

    - env: TARGET=thumbv7em-none-eabi
      rust: 1.32.0

    - env: TARGET=thumbv7em-none-eabihf
      rust: 1.32.0

    - env: TARGET=thumbv8m.main-none-eabi
      rust: 1.32.0

    # Stable ##################################################################
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: stable

    - env: TARGET=thumbv6m-none-eabi
      rust: stable

    - env: TARGET=thumbv7m-none-eabi
      rust: stable

    - env: TARGET=thumbv7em-none-eabi
      rust: stable

    - env: TARGET=thumbv7em-none-eabihf
      rust: stable

    - env: TARGET=thumbv8m.main-none-eabi
      rust: stable

    # Nightly #################################################################
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly

    - env: TARGET=thumbv6m-none-eabi
      rust: nightly

    - env: TARGET=thumbv7m-none-eabi
      rust: nightly

    - env: TARGET=thumbv7em-none-eabi
      rust: nightly

    - env: TARGET=thumbv7em-none-eabihf
      rust: nightly

    - env: TARGET=thumbv8m.main-none-eabi
      rust: nightly

before_install: set -e

install:
  - bash ci/install.sh
  - export PATH="$PATH:$PWD/gcc/bin:$PWD/qemu"

script:
  - bash ci/script.sh

after_script: set +e

branches:
  only:
    - master
    - staging
    - trying

notifications:
  email:
    on_success: never
